// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using via_web_application;

namespace viawebapplication.Migrations
{
    [DbContext(typeof(CatContext))]
    partial class CatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("via_web_application.Cat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("Breed");

                    b.Property<string>("Color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Picture");

                    b.Property<decimal>("Price");

                    b.Property<char>("Sex");

                    b.Property<decimal>("Weight");

                    b.HasKey("ID");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("via_web_application.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Status");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("via_web_application.OrderItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("catID");

                    b.Property<int?>("orderID");

                    b.Property<int>("quantity");

                    b.HasKey("ID");

                    b.HasIndex("catID");

                    b.HasIndex("orderID");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("via_web_application.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("via_web_application.Order", b =>
                {
                    b.HasOne("via_web_application.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("via_web_application.OrderItem", b =>
                {
                    b.HasOne("via_web_application.Cat", "cat")
                        .WithMany()
                        .HasForeignKey("catID");

                    b.HasOne("via_web_application.Order", "order")
                        .WithMany("Items")
                        .HasForeignKey("orderID");
                });
#pragma warning restore 612, 618
        }
    }
}
